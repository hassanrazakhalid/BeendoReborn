<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:component-scan base-package="com.Beendo.Dao" />
	<context:component-scan base-package="com.Beendo.Services" />
	<context:component-scan base-package="com.Beendo.Configuration" />
	<context:component-scan base-package="com.Beendo.Security" />
	<context:component-scan base-package="com.Beendo.Utils" />
	<context:component-scan base-package="com.Beendo.Controllers" />

<!-- 	<mvc:annotation-driven>
		<mvc:message-converters>
			Use the HibernateAware mapper instead of the default
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.Beendo.Configuration.HibernateAwareObjectMapper" />
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven> -->
	 <mvc:annotation-driven />
	<context:annotation-config />

	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="com.mysql.jdbc.Driver" 
		/> <property name="url" value="jdbc:mysql://127.0.0.1:3307/janjua_TestDB" 
		/> <property name="username" value="admin" /> <property name="password" value="admin" 
		/> 162.144.198.59 <property name="url" value="jdbc:mysql://127.0.0.1:3306/janjua_TestDb" 
		/> <property name="username" value="janjua_Admin" /> <property name="password" 
		value=")th*@(i_IW43" /> </bean> <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="packagesToScan"> 
		<list> <value>com.Beendo.Entities</value> </list> </property> <property name="configLocation"> 
		<value>classpath:/hibernate.cfg.xml</value> </property> <property name="hibernateProperties"> 
		<props> <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> 
		<prop key="connection.pool_size">1</prop> <prop key="hibernate.show_sql">true</prop> 
		<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop> 
		<prop key="hibernate.hbm2ddl.auto">update</prop> </props> </property> <property 
		name="hibernateProperties"> <props> <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> 
		<prop key="hibernate.connection.url">jdbc:mysql://192.168.1.8:3307/beendo</prop> 
		<prop key="hibernate.connection.username">admin</prop> <prop key="hibernate.connection.password">admmin</prop> 
		<prop key="hibernate.connection.pool_size">org.hibernate.dialect.MySQLDialect</prop> 
		<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop> 
		<prop key="hibernate.show_sql">true</prop> <prop key="hibernate.hbm2ddl.auto">update</prop> 
		<prop key="hibernate. connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider 
		</prop> <prop key="hibernate.c3p0.min_size">7</prop> <prop key="hibernate.c3p0.max_size">53</prop> 
		<prop key="hibernate.c3p0.timeout">100</prop> <prop key="hibernate.c3p0.max_statements">50</prop> 
		<prop key="hibernate.c3p0.idle_test_period">1000</prop> <prop key="hibernate.c3p0.validate">true</prop> 
		</props> </property> </bean> <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> <tx:annotation-driven 
		transaction-manager="transactionManager" /> -->


	<!-- <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="host" value="smtp.gmail.com" /> <property name="username" 
		value="hassanrazakhalid89@gmail.com" /> <property name="password" value="haider123" 
		/> <property name="javaMailProperties"> <props> <prop key="mail.smtp.auth">true</prop> 
		<prop key="mail.smtp.socketFactory.port">465</prop> <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> 
		<prop key="mail.smtp.port">465</prop> </props> </property> </bean> -->

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:EmailSettings.properties</value>
		</property>
	</bean>
	<!-- fixed-delay="${timerDuration}" initial-delay="1000" -->
	<!-- second, minute, hour, day of month, month, day(s) of week -->
	<!-- 0 59 23 1/1 * ? --><!-- For every 12 clock -->
	<!-- 0 0/1 * 1/1 * ? --><!-- For Every 1 min -->
	<task:scheduled-tasks>
		<task:scheduled ref="sharedData" cron="0 59 23 1/1 * ?"
			method="run" />
	</task:scheduled-tasks>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${host}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.socketFactory.port">465</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.port">465</prop>
			</props>
		</property>
	</bean>

	<import resource="security.xml" />
	<import resource="classpath:/com/github/javaplugs/jsf/jsfSpringScope.xml" /> <!-- For ViewScope -->
</beans>