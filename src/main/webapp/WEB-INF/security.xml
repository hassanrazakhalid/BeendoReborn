<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">


	<!-- Enable method level Spring Security by annotations -->
	<global-method-security pre-post-annotations="enabled" />
	<!-- jsr250-annotations="enabled" access-decision-manager-ref="accessDecisionManager" -->

	<!-- access-decision-manager-ref="accessDecisionManager" entry-point-ref="" -->

	<http auto-config="false" use-expressions="true">
		<csrf disabled="true" />

		<intercept-url pattern="/javax.faces.resource/**"
			access="permitAll" />
		<intercept-url pattern="/Views/Unsecured/Login/*"
			access="permitAll" />
		<intercept-url pattern="/Views/Unsecured/**" access="permitAll" />
		<intercept-url pattern="/Views/**" access="permitAll" />
		<intercept-url pattern="/Views/Secured/Dashboard/*"
			access="isAuthenticated()" />
		<intercept-url pattern="/Views/Secured/Entity/*"
			access="hasAnyRole('ROLE_ROOT_ADMIN', 'ROLE_ROOT_USER','ROLE_ENTITY_ADMIN')" />
		<intercept-url pattern="/Views/Secured/Payer/*"
			access="hasAnyRole('ROLE_ROOT_ADMIN', 
		'ROLE_ROOT_USER','ROLE_ENTITY_ADMIN')" />
		<intercept-url pattern="/Views/Secured/User/*"
			access="hasAnyRole('ROLE_ROOT_ADMIN', 'ROLE_ROOT_USER','ROLE_ENTITY_ADMIN')" />

		<form-login login-page="/Views/Unsecured/Login/index.xhtml" />
		<logout invalidate-session="true" delete-cookies="true"
			logout-url="/Views/Unsecured/logout.xhtml" />
		<session-management invalid-session-url="/Views/Unsecured/Login/index.xhtml" />

	</http>

	<!-- <beans:bean id="myAuthFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy"
			ref="sas" />
	</beans:bean>

	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy" /> -->

	<!-- Secutiy New Code -->

	<!-- <beans:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy"> 
		<filter-chain-map request-matcher="ant"> <filter-chain pattern="/images/*" 
		filters="none" /> <filter-chain pattern="/resources/**" filters="none" /> 
		<filter-chain pattern="/**" filters=" securityContextPersistenceFilter, basicAuthenticationFilter, 
		filterSecurityInterceptor" /> </filter-chain-map> logoutFilter,exceptionTranslationFilter, 
		</beans:bean> -->


	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
		<beans:property name="accessDecisionManager" ref="accessDecisionManager"></beans:property>
		<beans:property name="securityMetadataSource" ref="metaDataSource"></beans:property>
		<beans:property name="validateConfigAttributes" value="true" />
	</beans:bean>
	<!-- End -->

	<beans:bean id="basicAuthenticationFilter"
		class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<beans:constructor-arg>
			<beans:ref bean="authenticationManager" />
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="metaDataSource"
		class="com.Beendo.Security.MyFilterSecurityMetadataSource" />

	<beans:bean id="securityContextPersistenceFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />

	<beans:bean id="configAttributeImpl" class="com.Beendo.Security.ConfigAttributeImpl"
		scope="prototype" />
	<!-- <beans:bean id="customInterceptFilter" class="com.Beendo.Security.CustomFilterSecurityInterceptor"></beans:bean> -->
	<authentication-manager id="authenticationManager">
		<authentication-provider user-service-ref="userService">
			<password-encoder hash="plaintext">
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="roleVoter" class="com.Beendo.Security.HierarchicalJsr250Voter">
		<beans:constructor-arg>
			<beans:ref bean="customRoleHierarchy" />
		</beans:constructor-arg>
		<!-- <beans:property name="hierarchy"> <beans:value> ROLE_ADMIN > ROLE_USER 
			ROLE_USER > ROLE_GUEST </beans:value> </beans:property> -->
	</beans:bean>

	<beans:bean id="customRoleHierarchy" class="com.Beendo.Security.CustomRoleHierachy"></beans:bean>


	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.UnanimousBased">

		<beans:constructor-arg>

			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:ref bean="roleVoter" />
			</beans:list>
		</beans:constructor-arg>

	</beans:bean>

</beans:beans>
