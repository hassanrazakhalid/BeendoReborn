<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security
	 http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans
		 http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">


<!-- Enable method level Spring Security by annotations  -->
     <global-method-security pre-post-annotations="enabled" />  

	<http auto-config="true" use-expressions="true">
		<csrf disabled="true" />
		<intercept-url pattern="/Views/User**" access="hasRole('ADMIN')" />
		<intercept-url pattern="/Views/User/**" access="hasRole('ADMIN')" />
		<intercept-url pattern="/javax.faces.resource/**" access="permitAll"/>
  
        <!-- Define login page for Spring Security -->      
        <form-login login-page="/index.xhtml"/>
		<logout logout-url="/logout.html" />
	</http>

	<authentication-manager id="authenticationManager">
		<authentication-provider user-service-ref="userSecurityService">  
            <password-encoder hash="plaintext">  
        </password-encoder></authentication-provider>  
	</authentication-manager> 

 <!-- Inject authentication Manager to our LoginBean -->
    <!-- <beans:bean id="loginBean" name="loginBean" class="managedController.LoginBean" scope="prototype">
        <beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
    </beans:bean> -->
</beans:beans>
